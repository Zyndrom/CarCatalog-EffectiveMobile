{
    "swagger": "2.0",
    "info": {
        "description": "Cars Catalog.",
        "title": "Cars Catalog",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/car/update": {
            "post": {
                "description": "Update car by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Update Car",
                "parameters": [
                    {
                        "description": "Change car date from body by id",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car Updated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/cars": {
            "get": {
                "description": "Return cars. param=constant:value for filter. Equal by default. Constant: \u003cbr\u003elt = lower than \u003cbr\u003eltq = lower than equal \u003cbr\u003egt = Greater Than \u003cbr\u003egtq = Greater Than Equal\u003cbr\u003e between = Between",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Get Cars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit on cars in response",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset from begin",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order desc or asc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "car id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Car mark",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Car model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "year",
                        "name": "year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return array of cars",
                        "schema": {
                            "$ref": "#/definitions/model.Car"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "description": "Add cars by regional number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Add Cars",
                "parameters": [
                    {
                        "description": "Cars regional numbers",
                        "name": "regNum",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cars added"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "delete": {
                "description": "Delete car by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Delete Car",
                "parameters": [
                    {
                        "description": "Car Id",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/people/update": {
            "post": {
                "description": "Update people by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Peoples"
                ],
                "summary": "Update people",
                "parameters": [
                    {
                        "description": "Change people date from body by id",
                        "name": "people",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.People"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "People Updated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Car": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "mark": {
                    "type": "string",
                    "example": "Lada"
                },
                "model": {
                    "type": "string",
                    "example": "Vesta"
                },
                "owner": {
                    "$ref": "#/definitions/model.People"
                },
                "regNum": {
                    "type": "string",
                    "example": "X123XX150"
                },
                "year": {
                    "type": "integer",
                    "example": 2002
                }
            }
        },
        "model.People": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "string"
                },
                "patronymic": {
                    "type": "string",
                    "example": "string"
                },
                "surname": {
                    "type": "string",
                    "example": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}